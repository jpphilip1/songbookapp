// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@import "box-shadow";

@mixin button-variant($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);
  $passive-border: darken($border, 5%);
  $btn-focus-box-shadow : 0 0 0 2px rgba($border, .25);
  $btn-active-state-box-shadow : 0 3px 5px rgba($black,.125);

  // outline: none;
  color: $color;
  background-color: $background;
  border-color: $border;
  border: $input-btn-border-width solid $border;  
  // @include box-shadow($btn-box-shadow);

  // Hover and focus styles are shared
  @include hover {
    color: $color;
    background-color: $active-background;
    border-color: $active-border;      
  }
  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 2px rgba($border, .5);
    } @else {
      box-shadow: 0 0 0 2px rgba($border, .5);
    }
    outline: 1px auto darken($background, 15%);    
    color: $color;
    background-color: darken($background, 5%);
    border-color: $border;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: $background;
    border-color: $border;
  }

  &:active,
  &.active {
    background-image: none;
    @include boxShadow($btn-focus-box-shadow);
    @include boxShadowInside($btn-active-state-box-shadow);
    // outline: 1px auto darken($background, 15%);          
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color;
    // outline: 1px auto darken($background, 15%);          
    background-color: $active-background;
    background-image: none; // Remove the gradient for the pressed/active state
    border-color: $active-border;
    @include boxShadow($btn-active-box-shadow);
  }

  // &:active {
  //   &:focus {
  //     // outline: 1px auto darken($background, 15%);      
  //     color: $color;
  //     background-color: $active-background;
  //     border-color: $passive-border;
  //     @include hover {
  //       // outline: 1px auto darken($background, 15%);              
  //     }
  //   }
  // }
}

@mixin button-outline-variant($color, $color-hover: #fff) {
  color: $color;
  background-image: none;
  background-color: transparent;
  border-color: $color;

  @include hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 2px rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }
}

@mixin button-outline-version($color, $background: #fff) {
  color: $color;
  background-image: none;
  background-color: $background;
  border: $input-btn-border-width solid $color;  

  @include hover {
    color: $color;
    background-color: lighten($color, 45%);
    border-color: $color;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 1px rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
    opacity: 0.5;
    filter: alpha(opacity=50);
    // pointer-events: none;
    i {
      cursor: not-allowed; 
    }
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color;
    // background-color: darken($background, 5%);
    background-color: lighten($color, 45%);
    border-color: $color;
  }
}

@mixin button-hover-version($color, $background: transparent) {
  color: $color;
  background-image: none;
  background-color: transparent;
  border: none;  

  @include hover {
    color: $color;
    background-color: $background;
  }

  &:focus,
  &.focus {
    box-shadow: none;
    outline: none;
    background-color: darken($background, 1%);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
    opacity: 0.4;
    filter: alpha(opacity=40);
    // pointer-events: none;
    i {
      cursor: not-allowed; 
    }
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color;
    // background-color: darken($background, 5%);
    background-color: darken($background, 7%);
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
}
